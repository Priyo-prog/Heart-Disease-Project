First Time :

echo "# Heart-Disease-Project" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Priyo-prog/Heart-Disease-Project.git
git push -u origin main

Existing :

git remote add origin https://github.com/Priyo-prog/Heart-Disease-Project.git
git branch -M main
git push -u origin main

----------------------------------------------------------------------------------------
To get the status of the file whether in working directory or staging area or local repository
git diff --staged


-----------------------------------------------------------------------------------------------
To unstage the last change from staging area to working directory we use git reset

git reset HEAD <file_name>

-----------------------------------------------------------------------------------------------
To move file from local repository to staging area and cancel the commit

git reset --soft HEAD^


------------------------------------------------------------------------------------------------

The git commit --amend command is used to modify the most recent commit. It allows you to combine staged changes with the previous commit instead of creating a new commit. This can be particularly useful for correcting mistakes or adding missed changes to the last commit. Here's what it does in more detail:

Modify Commit Message: If you simply want to change the commit message of the last commit, you can use git commit --amend without staging any changes. This will open your default text editor where you can edit the commit message.


git commit --amend

This will open the editor to modify the message of the last commit.

Add Changes to the Last Commit:


-------------------------------------------------------------------------------------------------------------
This will add 2 files to local repository BUT first the file that we forgot has to be added to staging area

git add <file1> <file2>
git commit --amend -m "adding 2 files"

This stages file1 and file2, then amends the previous commit to include these changes.


-------------------------------------------------------------------------------------------------------------
To undo the last commit and all changes

git reset --hard HEAD^


-------------------------------------------------------------------------------------------------------------
Local repository to Global repository GitHub

git remote add origin https://....rest of the url...

git remote -v        # display remote repositories


-------------------------------------------------------------------------------------------------------------
To push to remotes

git push -u <name> <branch>


-------------------------------------------------------------------------------------------------------------
To Show the names of all branches

git branch

-------------------------------------------------------------------------------------------------------------
To create new branch

git branch <branch_name>

-------------------------------------------------------------------------------------------------------------
To create and switch to new branch

git checkout -b <branch_name>


-------------------------------------------------------------------------------------------------------------
To merge the branches

checkout to master branch

git checkout master

git merge <branch_to_be_merged>

-------------------------------------------------------------------------------------------------------------
To remove a branch 

git branch -d <branch_name>

-------------------------------------------------------------------------------------------------------------
To remove or delete from remote repository

git push -d origin <branch_name>

-------------------------------------------------------------------------------------------------------------
To remove an unmerged branch
 
git branch -D <branch_name>























